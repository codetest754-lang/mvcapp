name: CI/CD .NET Docker App

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout repo
    - name: Checkout code
      uses: actions/checkout@v3

    # 2️⃣ Setup .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    # 3️⃣ Restore dependencies
    - name: Restore dependencies
      run: dotnet restore MyMvcApp.csproj

    # 4️⃣ Build project
    - name: Build project
      run: dotnet build MyMvcApp.csproj --configuration Release --no-restore

    # 5️⃣ Publish project
    - name: Publish project
      run: dotnet publish MyMvcApp.csproj -c Release -o out

    # 6️⃣ Build Docker image
    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/mymvcapp:latest .

    # 7️⃣ Login to Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # 8️⃣ Push Docker image
    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/mymvcapp:latest

# Optional SSH deployment is removed because SSH secrets are not set


    # 9️⃣ Optional: Deploy to server via SSH
    # - name: SSH and Deploy
    #   if: ${{ secrets.SSH_HOST != '' && secrets.SSH_USER != '' && secrets.SSH_KEY != '' }} # Only run if SSH secrets are set
    #   uses: appleboy/ssh-action@v0.1.6
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     username: ${{ secrets.SSH_USER }}
    #     key: ${{ secrets.SSH_KEY }}
    #     script: |
    #       # Pull latest Docker image
    #       docker pull ${{ secrets.DOCKER_USERNAME }}/mymvcapp:latest
    #       # Stop old container if exists
    #       docker stop mymvcapp || true
    #       docker rm mymvcapp || true
    #       # Run new container on port 5000
    #       docker run -d -p 5000:80 --name mymvcapp ${{ secrets.DOCKER_USERNAME }}/mymvcapp:latest
